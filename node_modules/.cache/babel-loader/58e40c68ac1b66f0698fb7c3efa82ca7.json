{"ast":null,"code":"var _jsxFileName = \"/Users/Eden/Desktop/bruhwhat/CS520-Elena/src/components/M.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport mapboxgl from 'mapbox-gl';\nmapboxgl.accessToken = 'pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpejY4M29iazA2Z2gycXA4N2pmbDZmangifQ.-g_vE53SD2WrJ6tFX7QHmA';\n\nclass M extends React.Component {\n  constructor(props) {\n    super(props);\n    console.log(this.props); // nnamdi\n\n    this.state = {\n      lng: -71.401468,\n      lat: 42.2909342,\n      zoom: 11,\n      coordinates: [[-122.4833858013153, 37.829607404976734], [-122.4830961227417, 37.82932776098012], [-122.4830746650696, 37.82932776098012], [-122.48218417167662, 37.82889558180985], [-122.48218417167662, 37.82890193740421], [-122.48221099376678, 37.82868372835086], [-122.4822163581848, 37.82868372835086], [-122.48205006122589, 37.82801003030873]],\n      test: 5\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    console.log(\"recieved some props\");\n    console.log(this.state.coordinates);\n    console.log(nextProps.steps);\n    this.map.flyTo({\n      center: [nextProps.mid_lon, nextProps.mid_lat],\n      zoom: 12\n    });\n\n    try {\n      this.map.removeSource('lines');\n    } catch (e) {\n      console.log('Error' + e);\n    }\n\n    this.map.addLayer({\n      'id': 'lines',\n      'type': 'line',\n      'source': {\n        'type': 'geojson',\n        'data': {\n          'type': 'FeatureCollection',\n          'features': [{\n            'type': 'Feature',\n            'properties': {\n              'color': '#F7455D' // red\n\n            },\n            'geometry': {\n              'type': 'LineString',\n              'coordinates': nextProps.steps\n            }\n          }]\n        }\n      },\n      'paint': {\n        'line-width': 3 // Use a get expression (https://docs.mapbox.com/mapbox-gl-js/style-spec/#expressions-get)\n        // to set the line-color to a feature property value.\n        // 'line-color': ['get', 'color']\n\n      }\n    });\n  }\n\n  componentDidMount() {\n    const _this$state = this.state,\n          lng = _this$state.lng,\n          lat = _this$state.lat,\n          zoom = _this$state.zoom,\n          coordinates = _this$state.coordinates;\n    console.log(coordinates);\n    this.map = new mapboxgl.Map({\n      container: this.mapContainer,\n      style: 'mapbox://styles/mapbox/streets-v9',\n      center: [lng, lat],\n      zoom: zoom\n    }); // const map = new mapboxgl.Map({\n    //   container: this.mapContainer,\n    //   style: 'mapbox://styles/mapbox/streets-v9',\n    //   center: [lng, lat],\n    //   zoom : 16,\n    // });\n\n    this.map.on('move', () => {\n      const _this$map$getCenter = this.map.getCenter(),\n            lng = _this$map$getCenter.lng,\n            lat = _this$map$getCenter.lat;\n\n      this.setState({\n        lng: lng.toFixed(4),\n        lat: lat.toFixed(4),\n        zoom: this.map.getZoom().toFixed(2)\n      });\n    });\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          lng = _this$state2.lng,\n          lat = _this$state2.lat,\n          zoom = _this$state2.zoom;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"Map component: \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }), \"mid_lat : \", this.props.mid_lat, \" || \", this.state.lat, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }), \"mid_lon : \", this.props.mid_lon, \" || \", this.state.lng, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, `Longitude: ${lng} Latitude: ${lat} Zoom: ${zoom}`)), React.createElement(\"div\", {\n      ref: el => this.mapContainer = el,\n      className: \"mapLayer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default M;","map":{"version":3,"sources":["/Users/Eden/Desktop/bruhwhat/CS520-Elena/src/components/M.js"],"names":["React","ReactDOM","mapboxgl","accessToken","M","Component","constructor","props","console","log","state","lng","lat","zoom","coordinates","test","componentWillReceiveProps","nextProps","steps","map","flyTo","center","mid_lon","mid_lat","removeSource","e","addLayer","componentDidMount","Map","container","mapContainer","style","on","getCenter","setState","toFixed","getZoom","render","el"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,QAAP,MAAqB,WAArB;AAEAA,QAAQ,CAACC,WAAT,GAAuB,0FAAvB;;AAEA,MAAMC,CAAN,SAAgBJ,KAAK,CAACK,SAAtB,CAAgC;AAC9BC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKF,KAAjB,EAFiB,CAEO;;AACxB,SAAKG,KAAL,GAAa;AACTC,MAAAA,GAAG,EAAE,CAAC,SADG;AAETC,MAAAA,GAAG,EAAE,UAFI;AAGTC,MAAAA,IAAI,EAAE,EAHG;AAITC,MAAAA,WAAW,EAAE,CACX,CAAC,CAAC,iBAAF,EAAqB,kBAArB,CADW,EAEX,CAAC,CAAC,iBAAF,EAAqB,iBAArB,CAFW,EAGX,CAAC,CAAC,iBAAF,EAAqB,iBAArB,CAHW,EAIX,CAAC,CAAC,kBAAF,EAAsB,iBAAtB,CAJW,EAKX,CAAC,CAAC,kBAAF,EAAsB,iBAAtB,CALW,EAMX,CAAC,CAAC,kBAAF,EAAsB,iBAAtB,CANW,EAOX,CAAC,CAAC,iBAAF,EAAqB,iBAArB,CAPW,EAQX,CAAC,CAAC,kBAAF,EAAsB,iBAAtB,CARW,CAJJ;AAcTC,MAAAA,IAAI,EAAE;AAdG,KAAb;AAgBD;;AACDC,EAAAA,yBAAyB,CAACC,SAAD,EAAY;AACnCT,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWI,WAAvB;AACAN,IAAAA,OAAO,CAACC,GAAR,CAAYQ,SAAS,CAACC,KAAtB;AACA,SAAKC,GAAL,CAASC,KAAT,CAAe;AACXC,MAAAA,MAAM,EAAG,CAACJ,SAAS,CAACK,OAAX,EAAoBL,SAAS,CAACM,OAA9B,CADE;AAEXV,MAAAA,IAAI,EAAG;AAFI,KAAf;;AAIA,QAAI;AACA,WAAKM,GAAL,CAASK,YAAT,CAAsB,OAAtB;AACD,KAFH,CAEI,OAAOC,CAAP,EAAU;AACVjB,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAUgB,CAAtB;AACH;;AAED,SAAKN,GAAL,CAASO,QAAT,CAAkB;AACd,YAAM,OADQ;AAEd,cAAQ,MAFM;AAGd,gBAAU;AACR,gBAAQ,SADA;AAER,gBAAQ;AACN,kBAAQ,mBADF;AAEN,sBAAY,CAAC;AACX,oBAAQ,SADG;AAEX,0BAAc;AACZ,uBAAS,SADG,CACO;;AADP,aAFH;AAKX,wBAAY;AACV,sBAAQ,YADE;AAEV,6BAAeT,SAAS,CAACC;AAFf;AALD,WAAD;AAFN;AAFA,OAHI;AAmBd,eAAS;AACP,sBAAc,CADP,CAEP;AACA;AACA;;AAJO;AAnBK,KAAlB;AA0BC;;AACHS,EAAAA,iBAAiB,GAAG;AAAA,wBACsB,KAAKjB,KAD3B;AAAA,UACVC,GADU,eACVA,GADU;AAAA,UACLC,GADK,eACLA,GADK;AAAA,UACAC,IADA,eACAA,IADA;AAAA,UACMC,WADN,eACMA,WADN;AAElBN,IAAAA,OAAO,CAACC,GAAR,CAAaK,WAAb;AAEA,SAAKK,GAAL,GAAW,IAAIjB,QAAQ,CAAC0B,GAAb,CAAiB;AACxBC,MAAAA,SAAS,EAAE,KAAKC,YADQ;AAExBC,MAAAA,KAAK,EAAE,mCAFiB;AAGxBV,MAAAA,MAAM,EAAE,CAACV,GAAD,EAAMC,GAAN,CAHgB;AAIxBC,MAAAA,IAAI,EAAEA;AAJkB,KAAjB,CAAX,CAJkB,CAWlB;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAKM,GAAL,CAASa,EAAT,CAAY,MAAZ,EAAoB,MAAM;AAAA,kCACD,KAAKb,GAAL,CAASc,SAAT,EADC;AAAA,YACdtB,GADc,uBACdA,GADc;AAAA,YACTC,GADS,uBACTA,GADS;;AAEtB,WAAKsB,QAAL,CAAc;AACZvB,QAAAA,GAAG,EAAEA,GAAG,CAACwB,OAAJ,CAAY,CAAZ,CADO;AAEZvB,QAAAA,GAAG,EAAEA,GAAG,CAACuB,OAAJ,CAAY,CAAZ,CAFO;AAGZtB,QAAAA,IAAI,EAAE,KAAKM,GAAL,CAASiB,OAAT,GAAmBD,OAAnB,CAA2B,CAA3B;AAHM,OAAd;AAKD,KAPH;AASH;;AACCE,EAAAA,MAAM,GAAG;AAAA,yBACoB,KAAK3B,KADzB;AAAA,UACCC,GADD,gBACCA,GADD;AAAA,UACMC,GADN,gBACMA,GADN;AAAA,UACWC,IADX,gBACWA,IADX;AAGL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADnB,gBAEgB,KAAKN,KAAL,CAAWgB,OAF3B,UAEyC,KAAKb,KAAL,CAAWE,GAFpD,EAGK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHL,gBAIgB,KAAKL,KAAL,CAAWe,OAJ3B,UAIyC,KAAKZ,KAAL,CAAWC,GAJpD,EAMK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAO,cAAaA,GAAI,cAAaC,GAAI,UAASC,IAAK,EAAvD,CADD,CANL,EASM;AAAK,MAAA,GAAG,EAAEyB,EAAE,IAAI,KAAKR,YAAL,GAAoBQ,EAApC;AAAwC,MAAA,SAAS,EAAC,UAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATN,CADJ;AAaH;;AA1G6B;;AA6GhC,eAAelC,CAAf","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom'\nimport mapboxgl from 'mapbox-gl'\n\nmapboxgl.accessToken = 'pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpejY4M29iazA2Z2gycXA4N2pmbDZmangifQ.-g_vE53SD2WrJ6tFX7QHmA';\n\nclass M extends React.Component {\n  constructor(props) {\n    super(props) \n    console.log(this.props) // nnamdi\n    this.state = {\n        lng: -71.401468,  \n        lat: 42.2909342,\n        zoom: 11,\n        coordinates: [\n          [-122.4833858013153, 37.829607404976734],\n          [-122.4830961227417, 37.82932776098012],\n          [-122.4830746650696, 37.82932776098012],\n          [-122.48218417167662, 37.82889558180985],\n          [-122.48218417167662, 37.82890193740421],\n          [-122.48221099376678, 37.82868372835086],\n          [-122.4822163581848, 37.82868372835086],\n          [-122.48205006122589, 37.82801003030873]\n        ],\n        test: 5,\n      };\n  }\n  componentWillReceiveProps(nextProps) {\n    console.log(\"recieved some props\");\n    console.log(this.state.coordinates)\n    console.log(nextProps.steps)\n    this.map.flyTo({\n        center : [nextProps.mid_lon, nextProps.mid_lat],\n        zoom : 12\n    }) \n    try {\n        this.map.removeSource('lines')\n      } catch (e) {\n        console.log('Error' + e)\n    }\n        \n    this.map.addLayer({\n        'id': 'lines',\n        'type': 'line',\n        'source': {\n          'type': 'geojson',\n          'data': {\n            'type': 'FeatureCollection',\n            'features': [{\n              'type': 'Feature',\n              'properties': {\n                'color': '#F7455D' // red\n              },\n              'geometry': {\n                'type': 'LineString',\n                'coordinates': nextProps.steps\n              }\n            },]\n          }\n        },\n        'paint': {\n          'line-width': 3,\n          // Use a get expression (https://docs.mapbox.com/mapbox-gl-js/style-spec/#expressions-get)\n          // to set the line-color to a feature property value.\n          // 'line-color': ['get', 'color']\n        }\n      });\n    }\n  componentDidMount() {\n    const { lng, lat, zoom, coordinates } = this.state;\n    console.log( coordinates)\n\n    this.map = new mapboxgl.Map({\n        container: this.mapContainer,\n        style: 'mapbox://styles/mapbox/streets-v9',\n        center: [lng, lat],\n        zoom: zoom\n      });\n  \n    // const map = new mapboxgl.Map({\n    //   container: this.mapContainer,\n    //   style: 'mapbox://styles/mapbox/streets-v9',\n    //   center: [lng, lat],\n    //   zoom : 16,\n    // });\n\n    this.map.on('move', () => {\n        const { lng, lat } = this.map.getCenter();\n        this.setState({\n          lng: lng.toFixed(4),\n          lat: lat.toFixed(4),\n          zoom: this.map.getZoom().toFixed(2)\n        });\n      });\n\n}\n  render() {\n    const { lng, lat, zoom } = this.state;\n\n      return (\n          <div>\n              Map component: <br/> \n               mid_lat : {this.props.mid_lat} || { this.state.lat}\n               <br />\n               mid_lon : {this.props.mid_lon} || { this.state.lng}\n\n               <div>\n                <div>{`Longitude: ${lng} Latitude: ${lat} Zoom: ${zoom}`}</div>\n                </div>\n                <div ref={el => this.mapContainer = el} className=\"mapLayer\" />\n          </div>\n      )\n  }\n}\n\nexport default M;\n"]},"metadata":{},"sourceType":"module"}