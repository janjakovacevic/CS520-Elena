{"ast":null,"code":"import _slicedToArray from \"/Users/Eden/Desktop/bruhwhat/CS520-Elena/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Eden/Desktop/bruhwhat/CS520-Elena/src/components/C.js\";\nimport React from \"react\";\nimport { ButtonToolbar, ToggleButton, ToggleButtonGroup } from 'react-bootstrap';\nimport PlacesAutocomplete, { geocodeByAddress, getLatLng } from \"react-places-autocomplete\";\nimport { Button } from \"reactstrap\";\nimport axios from \"axios\";\nexport default function LocationSearch(props) {\n  const _React$useState = React.useState(\"\"),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        addressTo = _React$useState2[0],\n        setAddressTo = _React$useState2[1];\n\n  const _React$useState3 = React.useState(\"\"),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        addressFrom = _React$useState4[0],\n        setAddressFrom = _React$useState4[1];\n\n  let min_max_var = \"min\";\n\n  const handleSelect = async value => {\n    setAddressTo(value);\n  };\n\n  const handleSelectF = async value => {\n    setAddressFrom(value);\n  };\n\n  function getData(res) {\n    var coordList = res.data;\n  }\n\n  function handleToggle(e) {\n    console.log(\"toggle changed\", min_max_var);\n    console.log(e);\n\n    if (e === 1) {\n      min_max_var = \"min\";\n    } else {\n      min_max_var = \"max\";\n    }\n\n    console.log(\"value after : \", min_max_var);\n  }\n\n  async function setRoute() {\n    var uri = encodeURI(\"http://ec2-52-90-226-146.compute-1.amazonaws.com:8000/simple/route/ \" + addressTo + \"/\" + addressFrom + \"/\" + min_max_var);\n    console.log(uri);\n    const req = axios.get(uri);\n    return req.then(res => {\n      console.log(\"inside req\");\n      return res;\n    });\n  }\n\n  return React.createElement(\"div\", {\n    className: \"inputs\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"Route Options:\"), React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(PlacesAutocomplete, {\n    value: addressFrom,\n    onChange: setAddressFrom,\n    onSelect: handleSelectF,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, ({\n    getInputProps,\n    suggestions,\n    getSuggestionItemProps,\n    loading\n  }) => React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, \"From: \"), React.createElement(\"input\", Object.assign({}, getInputProps({\n    placeholder: \"Address From\"\n  }), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, loading ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \"...loading\") : null, suggestions.map(suggestion => {\n    const style = {\n      backgroundColor: suggestion.active ? \"#41b6e6\" : \"#fff\"\n    };\n    return React.createElement(\"div\", Object.assign({}, getSuggestionItemProps(suggestion, {\n      style\n    }), {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), suggestion.description);\n  })))), React.createElement(PlacesAutocomplete, {\n    value: addressTo,\n    onChange: setAddressTo,\n    onSelect: handleSelect,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, ({\n    getInputProps,\n    suggestions,\n    getSuggestionItemProps,\n    loading\n  }) => React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, \"To: \"), React.createElement(\"input\", Object.assign({}, getInputProps({\n    placeholder: \"Address To\"\n  }), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, loading ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, \"...loading\") : null, suggestions.map(suggestion => {\n    const style = {\n      backgroundColor: suggestion.active ? \"#41b6e6\" : \"#fff\"\n    };\n    return React.createElement(\"div\", Object.assign({}, getSuggestionItemProps(suggestion, {\n      style\n    }), {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }), suggestion.description);\n  })))), React.createElement(ButtonToolbar, {\n    className: \"radio-toolbar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, React.createElement(ToggleButtonGroup, {\n    type: \"radio\",\n    name: \"options\",\n    defaultValue: 1,\n    onChange: handleToggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, React.createElement(ToggleButton, {\n    value: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, \"Min\"), React.createElement(ToggleButton, {\n    value: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, \"Max\"))), React.createElement(Button, {\n    className: \"submit\",\n    onClick: evt => props.func(setRoute()),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, \" Go \")));\n}","map":{"version":3,"sources":["/Users/Eden/Desktop/bruhwhat/CS520-Elena/src/components/C.js"],"names":["React","ButtonToolbar","ToggleButton","ToggleButtonGroup","PlacesAutocomplete","geocodeByAddress","getLatLng","Button","axios","LocationSearch","props","useState","addressTo","setAddressTo","addressFrom","setAddressFrom","min_max_var","handleSelect","value","handleSelectF","getData","res","coordList","data","handleToggle","e","console","log","setRoute","uri","encodeURI","req","get","then","getInputProps","suggestions","getSuggestionItemProps","loading","placeholder","map","suggestion","style","backgroundColor","active","description","evt","func"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {ButtonToolbar, ToggleButton, ToggleButtonGroup } from 'react-bootstrap';\n\nimport PlacesAutocomplete, {\n  geocodeByAddress,\n  getLatLng\n} from \"react-places-autocomplete\";\nimport { Button } from \"reactstrap\";\nimport axios from \"axios\";\n\nexport default function LocationSearch(props) {\n  const [addressTo, setAddressTo] = React.useState(\"\");\n\n  const [addressFrom, setAddressFrom] = React.useState(\"\");\n\n  let min_max_var = \"min\"\n\n  const handleSelect = async value => {\n    setAddressTo(value);\n  };\n\n  const handleSelectF = async value => {\n    setAddressFrom(value);\n  };\n\n  function getData(res) {\n    var coordList = res.data;\n  }\n\n  function handleToggle(e) {\n      console.log(\"toggle changed\", min_max_var)\n      console.log(e)\n      if (e === 1) {\n        min_max_var = \"min\"\n      }\n      else {\n        min_max_var = \"max\"\n      }\n      console.log(\"value after : \", min_max_var)\n      \n  }\n  async function setRoute() {\n    var uri = encodeURI(\n      \"http://ec2-52-90-226-146.compute-1.amazonaws.com:8000/simple/route/ \" +\n        addressTo +\n        \"/\" +\n        addressFrom +\n        \"/\" +\n        min_max_var\n    );\n    console.log(uri);\n    const req = axios.get(uri);\n    return req.then(res => {\n      console.log(\"inside req\");\n      return res;\n    });\n  }\n\n  return (\n    <div className=\"inputs\">\n      <h2>Route Options:</h2>\n      <form>\n      <PlacesAutocomplete\n          value={addressFrom}\n          onChange={setAddressFrom}\n          onSelect={handleSelectF}\n        >\n          {({\n            getInputProps,\n            suggestions,\n            getSuggestionItemProps,\n            loading\n          }) => (\n            <div>\n              <h3>From: </h3>\n              <input {...getInputProps({ placeholder: \"Address From\" })} />\n\n              <div>\n                {loading ? <div>...loading</div> : null}\n\n                {suggestions.map(suggestion => {\n                  const style = {\n                    backgroundColor: suggestion.active ? \"#41b6e6\" : \"#fff\"\n                  };\n\n                  return (\n                    <div {...getSuggestionItemProps(suggestion, { style })}>\n                      {suggestion.description}\n                    </div>\n                  );\n                })}\n              </div>\n            </div>\n          )}\n        </PlacesAutocomplete>\n        <PlacesAutocomplete\n          value={addressTo}\n          onChange={setAddressTo}\n          onSelect={handleSelect}\n        >\n          {({\n            getInputProps,\n            suggestions,\n            getSuggestionItemProps,\n            loading\n          }) => (\n            <div>\n              <h3>To: </h3>\n              <input {...getInputProps({ placeholder: \"Address To\" })} />\n\n              <div>\n                {loading ? <div>...loading</div> : null}\n\n                {suggestions.map(suggestion => {\n                  const style = {\n                    backgroundColor: suggestion.active ? \"#41b6e6\" : \"#fff\"\n                  };\n\n                  return (\n                    <div {...getSuggestionItemProps(suggestion, { style })}>\n                      {suggestion.description}\n                    </div>\n                  );\n                })}\n              </div>\n            </div>\n          )}\n        </PlacesAutocomplete>\n        <ButtonToolbar className=\"radio-toolbar\">\n            <ToggleButtonGroup type=\"radio\" name=\"options\" defaultValue={1} onChange={handleToggle}>\n                <ToggleButton value={1}>Min</ToggleButton>\n                <ToggleButton value={2}>Max</ToggleButton>\n            </ToggleButtonGroup>\n\n        </ButtonToolbar>\n        <Button className=\"submit\" onClick={evt => props.func(setRoute())}> Go </Button>\n      </form>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}